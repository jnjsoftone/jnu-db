"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}(exports,{backup:function(){return s},connect:function(){return r},disconnect:function(){return n},executeQuery:function(){return a},executeTransaction:function(){return c},restore:function(){return o}});const e=require("mongodb"),t=require("jnu-abc"),r=async t=>{try{let r=new e.MongoClient(t.url);await r.connect();let n=r.db(t.dbName);return{client:r,db:n}}catch(e){return console.error("MongoDB 연결 오류:",e),null}},n=async e=>{try{await e.close()}catch(e){console.error("MongoDB 연결 해제 오류:",e)}},a=async(e,t,r,n={})=>{try{let a=e.collection(t),c=await a.find(r,n).toArray();return{success:!0,data:c}}catch(e){return{success:!1,error:e instanceof Error?e.message:"알 수 없는 오류"}}},c=async(e,t,r)=>{let n=t.startSession();try{let t=[];return await n.withTransaction(async()=>{for(let a of r){let r;let c=e.collection(a.collection);switch(a.operation){case"insert":r=await c.insertOne(a.query,{session:n});break;case"update":r=await c.updateOne(a.query,a.update,{session:n});break;case"delete":r=await c.deleteOne(a.query,{session:n})}r&&t.push(r)}}),{success:!0,data:t}}catch(e){return{success:!1,error:e instanceof Error?e.message:"알 수 없는 오류"}}finally{await n.endSession()}},s=async(e,r)=>{try{let n=await e.listCollections().toArray(),a={};for(let t of n){let r=t.name,n=await e.collection(r).find({}).toArray();a[r]=n}return await (0,t.saveJson)(r,a),{success:!0}}catch(e){return{success:!1,error:e instanceof Error?e.message:"알 수 없는 오류"}}},o=async(e,r,n)=>{let a=r.startSession();try{let r=await (0,t.loadJson)(n);return await a.withTransaction(async()=>{for(let[t,n]of Object.entries(r))if(Array.isArray(n)&&n.length>0){let r=e.collection(t);await r.insertMany(n,{session:a})}}),{success:!0}}catch(e){return{success:!1,error:e instanceof Error?e.message:"알 수 없는 오류"}}finally{await a.endSession()}};