"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function(e,r){for(var t in r)Object.defineProperty(e,t,{enumerable:!0,get:r[t]})}(exports,{backup:function(){return c},executeQuery:function(){return s},executeTransaction:function(){return a},restore:function(){return n}});const e=/*#__PURE__*/t(require("fs")),r=/*#__PURE__*/t(require("path"));function t(e){return e&&e.__esModule?e:{default:e}}const s=async(e,r,t)=>new Promise(s=>{e.all(r,t,(e,r)=>{e?s({success:!1,error:e}):s({success:!0,data:r})})}),a=async(e,r)=>new Promise(t=>{let s=0,a=(r,t)=>new Promise((s,a)=>{e.run(r,t,function(e){e?a(e):s(this.changes||0)})}),c=async()=>{try{for(let{query:e,params:t}of(await a("BEGIN TRANSACTION"),r)){let r=await a(e,t);s+=r}await a("COMMIT"),t({success:!0,data:{affectedRows:s}})}catch(e){try{await a("ROLLBACK")}catch(e){console.error("롤백 중 오류:",e)}t({success:!1,error:e})}};e.serialize(()=>{c()})}),c=async(t,a)=>{try{let c=r.default.dirname(a);e.default.existsSync(c)||e.default.mkdirSync(c,{recursive:!0});let n=await s(t,"SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite_%'");if(!n.success)throw n.error;let o={};for(let{name:e}of n.data||[]){let r=await s(t,`SELECT * FROM ${e}`);r.success&&r.data&&(o[e]=r.data)}return e.default.writeFileSync(a,JSON.stringify(o,null,2)),{success:!0}}catch(e){return console.error("백업 실행 중 오류:",e),{success:!1,error:e}}},n=async(r,t)=>{try{if(!e.default.existsSync(t))return console.error("백업 파일을 찾을 수 없습니다:",t),{success:!1,error:Error("백업 파일을 찾을 수 없습니다.")};let a=JSON.parse(e.default.readFileSync(t,"utf-8"));await s(r,"BEGIN TRANSACTION");try{for(let[e,t]of Object.entries(a))if(Array.isArray(t)&&t.length>0){let a=Object.keys(t[0]),c=a.map(()=>"?").join(","),n=`INSERT INTO ${e} (${a.join(",")}) VALUES (${c})`;for(let e of t)await s(r,n,Object.values(e))}return await s(r,"COMMIT"),{success:!0}}catch(e){throw await s(r,"ROLLBACK"),e}}catch(e){return console.error("복원 실행 중 오류:",e),{success:!1,error:e}}};