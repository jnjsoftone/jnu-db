"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function(e,r){for(var t in r)Object.defineProperty(e,t,{enumerable:!0,get:r[t]})}(exports,{backup:function(){return i},createPool:function(){return s},executeQuery:function(){return n},executeTransaction:function(){return u},restore:function(){return l}});const e=/*#__PURE__*/o(require("mysql2/promise")),r=require("child_process"),t=require("util"),c=/*#__PURE__*/o(require("fs")),a=/*#__PURE__*/o(require("path"));function o(e){return e&&e.__esModule?e:{default:e}}(0,t.promisify)(r.exec);const s=r=>e.default.createPool({host:r.host,user:r.user,password:r.password,database:r.database,port:r.port||3306,waitForConnections:!0,connectionLimit:r.connectionLimit||10,queueLimit:0}),n=async(e,r,t=[])=>{try{let[c]=await e.execute(r,t);return{success:!0,data:c,error:void 0}}catch(e){return console.error("쿼리 실행 실패:",e),{success:!1,data:void 0,error:e instanceof Error?e:Error(e instanceof Error?e.message:"알 수 없는 오류가 발생했습니다.")}}},u=async(e,r)=>{try{await e.beginTransaction();let t=[];try{for(let c of r){let[r]=await e.execute(c.query,c.params||[]);t.push(r)}return await e.commit(),{success:!0,data:t}}catch(r){throw await e.rollback(),r}}catch(e){return{success:!1,error:e}}},i=async(e,r)=>{try{let t=a.default.dirname(r);c.default.existsSync(t)||c.default.mkdirSync(t,{recursive:!0});let[o]=await e.execute("SHOW TABLES"),s={};for(let r of o){let t=Object.values(r)[0],[c]=await e.execute(`SELECT * FROM ${t}`);s[t]=c}return c.default.writeFileSync(r,JSON.stringify(s,null,2)),{success:!0}}catch(e){return console.error("백업 실행 중 오류:",e),{success:!1,error:e}}},l=async(e,r)=>{try{if(!c.default.existsSync(r))return console.error("백업 파일을 찾을 수 없습니다:",r),{success:!1,error:Error("백업 파일을 찾을 수 없습니다.")};let t=JSON.parse(c.default.readFileSync(r,"utf-8"));await e.beginTransaction();try{for(let[r,c]of Object.entries(t))if(Array.isArray(c)&&c.length>0){let t=Object.keys(c[0]),a=t.map(()=>"?").join(","),o=`INSERT INTO ${r} (${t.join(",")}) VALUES (${a})`;for(let r of c)await e.execute(o,Object.values(r))}return await e.commit(),{success:!0}}catch(r){throw await e.rollback(),r}}catch(e){return console.error("복원 실행 중 오류:",e),{success:!1,error:e}}};