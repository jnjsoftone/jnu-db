import{executeQuery as e}from"./sqlite";import{executeQuery as t}from"./postgres";import{executeQuery as a}from"./mysql";let s=async(s,r)=>{switch(s.type){case"sqlite":{let t=await e(s.connection,`PRAGMA table_info(${r})`);return t.success?t.data.filter(e=>!e.pk&&"created_at"!==e.name).map(e=>e.name):[]}case"postgres":{let e=await t(s.connection,`SELECT column_name FROM information_schema.columns 
         WHERE table_name = $1 
         AND column_name != 'created_at' 
         AND column_default IS NULL OR column_default NOT LIKE 'nextval%'`,[r]);return e.success?e.data.map(e=>e.column_name):[]}case"mysql":{let e=await a(s.connection,`SHOW COLUMNS FROM ${r}`);return e.success?e.data.filter(e=>!e.Key.includes("PRI")&&"created_at"!==e.Field).map(e=>e.Field):[]}}},r=async(s,r,c,n,o)=>{let i=c.join(", "),l="postgres"===s.type?"LIMIT $1 OFFSET $2":"LIMIT ? OFFSET ?",u=[o,n];switch(s.type){case"sqlite":{let t=await e(s.connection,`SELECT ${i} FROM ${r} ${l}`,u);return t.success?t.data:[]}case"postgres":{let e=await t(s.connection,`SELECT ${i} FROM ${r} ${l}`,u);return e.success?e.data:[]}case"mysql":{let e=await a(s.connection,`SELECT ${i} FROM ${r} ${l}`,u);return e.success?e.data:[]}}},c=async(s,r,c,n)=>{if(0===n.length)return!0;try{for(let o of n){let n;let i=c.join(", "),l="postgres"===s.type?`(${c.map((e,t)=>`$${t+1}`).join(", ")})`:`(${c.map(()=>"?").join(", ")})`,u=`INSERT INTO ${r} (${i}) VALUES ${l}`,m=c.map(e=>o[e]);switch(s.type){case"sqlite":n=await e(s.connection,u,m);break;case"postgres":n=await t(s.connection,u,m);break;case"mysql":n=await a(s.connection,u,m)}if(!n.success)return console.error(`데이터 삽입 실패: ${JSON.stringify(n.error)}`),!1}return!0}catch(e){return console.error("데이터 삽입 중 오류:",e),!1}},n=async(e,t,a)=>{try{let n=await s(e,a);if(0===n.length)throw Error(`테이블 ${a}의 스키마를 가져올 수 없습니다.`);let o=await r(e,a,n,0,1e3);if(0===o.length)return{success:!0,tables:[{name:a,rows:0}]};if(!await c(t,a,n,o))throw Error(`테이블 ${a}의 데이터 삽입 중 오류가 발생했습니다.`);return{success:!0,tables:[{name:a,rows:o.length}],data:o}}catch(e){return{success:!1,error:e}}};export{n as migrate};