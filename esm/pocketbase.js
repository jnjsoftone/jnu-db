import e from"pocketbase";import{saveJson as t,loadJson as r}from"jnu-abc";let a=async t=>{try{let r=new e(t.url);return t.email&&t.password&&await r.admins.authWithPassword(t.email,t.password),r}catch(e){return console.error("PocketBase 연결 오류:",e),null}},c=async e=>{try{e.authStore.clear()}catch(e){console.error("PocketBase 연결 해제 오류:",e)}},s=async(e,t,r={})=>{try{let a=await e.collection(t).getList(1,50,r);return{success:!0,data:a.items}}catch(e){return{success:!1,error:e instanceof Error?e.message:"알 수 없는 오류"}}},o=async(e,t)=>{try{let r=[];for(let a of t){let t;let c=e.collection(a.collection);switch(a.operation){case"create":t=await c.create(a.data);break;case"update":if(!a.id)throw Error("ID가 필요합니다");t=await c.update(a.id,a.data);break;case"delete":if(!a.id)throw Error("ID가 필요합니다");t=await c.delete(a.id)}t&&r.push(t)}return{success:!0,data:r}}catch(e){return{success:!1,error:e instanceof Error?e.message:"알 수 없는 오류"}}},i=async(e,r)=>{try{let a=await e.collections.getList(1,50),c={};for(let t of a.items){let r=await e.collection(t.id).getList(1,50);c[t.id]=r.items}return await t(r,c),{success:!0}}catch(e){return{success:!1,error:e instanceof Error?e.message:"알 수 없는 오류"}}},n=async(e,t)=>{try{let a=await r(t);for(let[t,r]of Object.entries(a))if(Array.isArray(r)&&r.length>0){let a=e.collection(t);for(let e of r)await a.create(e)}return{success:!0}}catch(e){return{success:!1,error:e instanceof Error?e.message:"알 수 없는 오류"}}};export{a as connect,c as disconnect,s as executeQuery,o as executeTransaction,i as backup,n as restore};