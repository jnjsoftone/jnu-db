import{Pool as e}from"pg";import{saveJson as r,loadJson as t}from"jnu-abc";let a=r=>new e({host:r.host,user:r.user,password:r.password,database:r.database,port:r.port||5432,max:r.max||20}),s=async e=>{try{let r=a(e);return await r.connect()}catch(e){return console.error("PostgreSQL 연결 오류:",e),null}},c=async e=>{try{await e.release()}catch(e){console.error("PostgreSQL 연결 해제 오류:",e)}},o=async(e,r,t=[])=>{try{let a=await e.query(r,t);return{success:!0,data:a.rows}}catch(e){return{success:!1,error:e instanceof Error?e.message:"알 수 없는 오류"}}},n=async(e,r)=>{try{let t=[];for(let{query:a,params:s=[]}of(await e.query("BEGIN"),r)){let r=await e.query(a,s);t.push(...r.rows)}return await e.query("COMMIT"),{success:!0,data:t}}catch(r){return await e.query("ROLLBACK"),{success:!1,error:r instanceof Error?r.message:"알 수 없는 오류"}}},u=async(e,t)=>{try{let a=await e.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public'
    `),s={};for(let{table_name:r}of a.rows){let t=await e.query(`SELECT * FROM ${r}`);s[r]=t.rows}return await r(t,s),{success:!0}}catch(e){return{success:!1,error:e instanceof Error?e.message:"알 수 없는 오류"}}},i=async(e,r)=>{try{let a=await t(r);for(let[r,t]of(await e.query("BEGIN"),Object.entries(a)))if(Array.isArray(t)&&t.length>0){let a=Object.keys(t[0]),s=a.map((e,r)=>`$${r+1}`).join(","),c=`INSERT INTO ${r} (${a.join(",")}) VALUES (${s})`;for(let r of t)await e.query(c,Object.values(r))}return await e.query("COMMIT"),{success:!0}}catch(r){return await e.query("ROLLBACK"),{success:!1,error:r instanceof Error?r.message:"알 수 없는 오류"}}};export{a as createPool,s as connect,c as disconnect,o as executeQuery,n as executeTransaction,u as backup,i as restore};