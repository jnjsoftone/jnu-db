function e(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}import{Database as a}from"sqlite3";import{open as t}from"sqlite";export class SqliteSchemaManager{async init(){this.db=await t({filename:this.filePath,driver:a})}async close(){this.db&&await this.db.close()}async createTable(e){try{let a=this.groupByTableName(e);for(let[e,t]of Object.entries(a)){let a=this.generateCreateTableSQL(e,t);await this.db.exec(a)}return!0}catch(e){return console.error("SQLite 테이블 생성 중 오류:",e),!1}}async extractSchema(e){try{let a=await this.db.all(`PRAGMA table_info(${e})`),t=await this.db.all(`PRAGMA foreign_key_list(${e})`),r=await this.db.all(`PRAGMA index_list(${e})`),n=[];for(let e of r)if(1===e.unique)for(let a of(await this.db.all(`PRAGMA index_info(${e.name})`)))n.push(a.name);return Promise.all(a.map(async a=>{let r=t.find(e=>e.from===a.name);return{table_name:e,column_name:a.name,data_type:a.type,is_nullable:0===a.notnull,is_primary:1===a.pk,is_unique:n.includes(a.name)||1===a.pk,is_foreign:!!r,foreign_table:r?r.table:void 0,foreign_column:r?r.to:void 0,default_value:a.dflt_value,auto_increment:1===a.pk&&"INTEGER"===a.type.toUpperCase(),description:""}}))}catch(e){return console.error("SQLite 스키마 추출 중 오류:",e),[]}}groupByTableName(e){return e.reduce((e,a)=>{let{table_name:t}=a;return e[t]||(e[t]=[]),e[t].push(a),e},{})}generateCreateTableSQL(e,a){let t=a.map(e=>this.generateColumnSQL(e)),r=a.filter(e=>e.is_primary).map(e=>e.column_name),n=a.filter(e=>e.is_foreign&&e.foreign_table&&e.foreign_column).map(e=>this.generateForeignKeySQL(e)),i=`
CREATE TABLE ${e} (
  ${t.join(",\n  ")}`;return r.length>1&&(i+=`,
  PRIMARY KEY (${r.join(", ")})`),n.length>0&&(i+=`,
  ${n.join(",\n  ")}`),i+="\n)"}generateColumnSQL(e){return[e.column_name,this.getDataTypeSQL(e),e.is_primary&&e.auto_increment&&"INTEGER"===e.data_type.toUpperCase()?"PRIMARY KEY":"",e.is_primary&&(!e.auto_increment||"INTEGER"!==e.data_type.toUpperCase())?"PRIMARY KEY":"",e.is_nullable?"":"NOT NULL",e.is_unique&&!e.is_primary?"UNIQUE":"",e.default_value?`DEFAULT ${e.default_value}`:""].filter(Boolean).join(" ")}generateForeignKeySQL(e){return`FOREIGN KEY (${e.column_name}) REFERENCES ${e.foreign_table} (${e.foreign_column})`}getDataTypeSQL(e){switch(e.data_type.toUpperCase()){case"INT":case"INTEGER":case"TINYINT":case"SMALLINT":case"MEDIUMINT":case"BIGINT":case"UNSIGNED BIG INT":case"INT2":case"INT8":return"INTEGER";case"CHARACTER":case"VARCHAR":case"VARYING CHARACTER":case"NCHAR":case"NATIVE CHARACTER":case"NVARCHAR":return e.length?`TEXT(${e.length})`:"TEXT";case"TEXT":case"CLOB":return"TEXT";case"BLOB":return"BLOB";case"REAL":case"DOUBLE":case"DOUBLE PRECISION":case"FLOAT":return"REAL";case"NUMERIC":case"DECIMAL":case"BOOLEAN":case"DATE":case"DATETIME":return"NUMERIC";default:return e.data_type}}constructor(a){e(this,"db",void 0),e(this,"filePath",void 0),this.filePath=a}}